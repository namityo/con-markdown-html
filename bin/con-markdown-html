#!/usr/bin/env node

var path = require("path");
var program = require('commander');
var recursive = require('recursive-readdir');
var ConMarkdownHtml = require('../lib/con-markdown-html');

program
    .version(require('../package.json').version)
    .usage('[options] <markdown-file ...>')
    .option('-c, --css <path>', 'add markdown style file')
    .option('-l, --hljs <name>', 'change highlight.js style file. (default vs2015.css')
    .option('-b, --break', 'new line to <br> ')
    .option('-d, --dir', 'Specify directory instead of file.')
    .option('-e, --ext <extname>', 'output file ext (html format)')
    .parse(process.argv);

if (program.args.length === 0) program.help()

var obj = new ConMarkdownHtml();
if (program.ext) obj.outputExtname = program.ext;
if (program.hljs) obj.highlightStyle = program.hljs;
if (program.break) obj.break = program.break;
if (program.css) obj.stylePaths.push(program.css);

if (program.dir) {
    // dir
    let markdown_ext = ['.md'];
    recursive(program.args[0], [], function (err, files) {
        let markdowns = files.filter(v => {
            return markdown_ext.indexOf(path.extname(v)) != -1;
        });
        for(var i = 0;i < markdowns.length; i++) {
            obj.convert(markdowns[i]);
        }
    });
} else {
    // files
    for(var i = 0;i < program.args.length; i++){
        obj.convert(program.args[i]);
    }
}
